网上有很多的curl请求模拟类库 直接下载使用即可！
curl是干什么的呢？
比如我们在一个控制器的某个方法当中需要请求外网当中的某个接口  并且该接口必须是post形式请求 那么现在就必须使用curl来模拟请求该接口；
下边是post请求某个接口的方法； 第一个参数是url请求的地址 第二个参数是要发送到接口当中的数据；

//此方法适用于http://  以及 https://请求
 public function vpost($url,$data){ // 模拟提交数据函数
        $curl = curl_init(); // 启动一个CURL会话
        curl_setopt($curl, CURLOPT_URL, $url); // 要访问的地址
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); // 对认证证书来源的检查
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); // 从证书中检查SSL加密算法是否存在
        curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); // 模拟用户使用的浏览器
        curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); // 使用自动跳转
        curl_setopt($curl, CURLOPT_AUTOREFERER, 1); // 自动设置Referer
        curl_setopt($curl, CURLOPT_POST, 1); // 发送一个常规的Post请求
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data); // Post提交的数据包
        curl_setopt($curl, CURLOPT_TIMEOUT, 30); // 设置超时限制防止死循环
        curl_setopt($curl, CURLOPT_HEADER, 0); // 显示返回的Header区域内容
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); // 获取的信息以文件流的形式返回
        $tmpInfo = curl_exec($curl); // 执行操作
        if (curl_errno($curl)) {
            echo 'Errno'.curl_error($curl);//捕抓异常
        }
        curl_close($curl); // 关闭CURL会话
        return $tmpInfo; // 返回数据
    }


 //我们访问该方法 在该方法当中我们使用curl去请求了某个接口
    public function ceshiCurl()
    {
           $url = "http://hushaoliang.duapp.com/index.php/welcome/textcurl";
           $params = array('name'=>'胡绍良','password'=>'Huliang1991128');
           $arr = $this->vpost($url,$params);
           print_r($arr);die;
    }

====================================================
  //curl当中post请求的是该方法； 
    public function textCurl()
    {
      //进行各种逻辑处理！
      $arr = $this->input->post();
      print_r($arr);//这个地方一定是输出的才行  必须是打印输出 不要使用return；
    }
